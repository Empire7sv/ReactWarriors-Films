{"version":3,"sources":["img/unnamed.jpg","components/movieItem.jsx","components/moviesWillWatch.jsx","utils/api.js","components/MovieTabs.jsx","components/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","MovieItem","state","willWatch","imgSource","_this2","this","_this$props","props","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","backdrop_path","poster_path","concat","img","react_default","a","createElement","Card","CardImg","top","src","alt","CardBody","CardTitle","title","CardText","className","vote_average","Button","color","onClick","bind","setState","Component","MoviesWillWatch","_ref","moviesWillWatch","titles","map","ListGroupItem","style","Fragment","length","ListGroup","API_URL","API_KEY_3","MovieTabs","nextProps","nextState","sort_by","updateSortBy","handleClick","value","getClassLink","Row","ButtonGroup","outline","App","movies","page","pages","getMovies","_this$state","_this","fetch","then","response","json","result","results","total_pages","_this$state2","updateMovies","filter","item","id","updateMoviesWillWatch","listWillWatch","Object","toConsumableArray","category","moveToPrewPage","console","log","moveToNextPage","prevProps","prevSate","_this$state3","_this$state4","Container","MovieTabs_MovieTabs","Col","sm","md","key","movieItem_MovieItem","components_moviesWillWatch","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f9edccde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unnamed.c07009cf.jpg\";","import React, { Component } from 'react';\r\nimport { Button, Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\r\nimport img from '../img/unnamed.jpg';\r\n\r\nexport default class MovieItem extends Component {\r\n\r\n  state = {\r\n    willWatch: false\r\n  }\r\n  \r\n  render() {\r\n    const { movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props;\r\n    const { willWatch } = this.state;\r\n\r\n    let imgSource;\r\n    if (movie.backdrop_path || movie.poster_path) {\r\n      imgSource = `https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`;\r\n    } else {\r\n      imgSource = img;\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          src={imgSource}\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle>{movie.title}</CardTitle>\r\n          <CardText className=\"d-flex justify-content-between align-items-center\">\r\n            <p className=\"mb-0\">Rating: {movie.vote_average}</p>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={removeMovie.bind(this, movie)}\r\n            >\r\n              Delete movie\r\n            </Button>\r\n            {willWatch ? (\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    willWatch: false\r\n                  });\r\n                  removeMovieFromWillWatch(movie)\r\n                }}\r\n              >\r\n                Remove Will Watch\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color= \"success\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    willWatch: true\r\n                  });\r\n                  addMovieToWillWatch(movie)\r\n                }}\r\n              >\r\n                Add Will Watch\r\n              </Button>\r\n            )}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst MoviesWillWatch = ({ moviesWillWatch }) => {\r\n\r\n  const titles = moviesWillWatch.map(movie => {\r\n    return (\r\n      <ListGroupItem>\r\n        <div className=\"d-flex justify-content-between\">\r\n          {movie.title} <span style={{ color: 'red' }}>{movie.vote_average}</span>\r\n        </div>\r\n      </ListGroupItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <h4>\r\n        Will Watch: {moviesWillWatch.length} {moviesWillWatch.length === 1 ? 'movie' : 'movies'}\r\n      </h4>\r\n      <ListGroup>\r\n        {titles}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default MoviesWillWatch;","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","import React, { Component } from 'react';\r\nimport { Row, ButtonGroup, Button } from 'reactstrap';\r\n\r\nexport default class MovieTabs extends Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.sort_by !== this.props.sort_by) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sort_by, updateSortBy } = this.props;\r\n\r\n    const handleClick = value => () => updateSortBy(value);\r\n    const getClassLink = value => sort_by === value ? false : true;\r\n\r\n    return (\r\n      <Row className=\"ml-3\">\r\n        <ButtonGroup className=\"mb-4\">\r\n          <Button\r\n            color=\"primary\"\r\n            outline={getClassLink('popularity.desc')}\r\n            onClick={handleClick('popularity.desc')}\r\n          >\r\n            Popularity desc\r\n            </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            outline={getClassLink('revenue.desc')}\r\n            onClick={handleClick('revenue.desc')}\r\n          >\r\n            Revenue desc\r\n            </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            outline={getClassLink('vote_average.desc')}\r\n            onClick={handleClick('vote_average.desc')}\r\n          >\r\n            Vote average desc\r\n            </Button>\r\n        </ButtonGroup>\r\n      </Row>\r\n    );\r\n  }\r\n  \r\n}","import React, { Component } from \"react\";\r\nimport MovieItem from \"./movieItem\";\r\nimport { Container, Row, Col, ButtonGroup, Button } from 'reactstrap';\r\nimport MoviesWillWatch from \"./moviesWillWatch\";\r\nimport { API_URL, API_KEY_3 } from '../utils/api';\r\nimport MovieTabs from \"./MovieTabs\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    movies: [],\r\n    moviesWillWatch: [],\r\n    sort_by: 'popularity.desc',\r\n    page: 1,\r\n    pages: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevSate) {\r\n    const { sort_by, page } = this.state;\r\n    \r\n    if (prevSate.sort_by !== sort_by ||\r\n      prevSate.page !== page) {\r\n      this.getMovies();\r\n    }\r\n  }\r\n\r\n  getMovies = () => {\r\n    const { sort_by, page } = this.state;\r\n    const type = '/discover/movie';\r\n\r\n    fetch(`${API_URL}${type}?api_key=${API_KEY_3}&sort_by=${sort_by}&page=${page}`)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: result.results,\r\n          pages: result.total_pages\r\n        });\r\n      });\r\n  }\r\n\r\n  removeMovie = (movie) => {\r\n    const { movies, moviesWillWatch } = this.state;\r\n    const updateMovies = movies.filter(item => item.id !== movie.id);\r\n    const updateMoviesWillWatch = moviesWillWatch.filter(item => item.id !== movie.id);\r\n\r\n    this.setState({\r\n      movies: updateMovies,\r\n      moviesWillWatch: updateMoviesWillWatch\r\n    })\r\n  }\r\n\r\n  addMovieToWillWatch = movie => {\r\n    const { moviesWillWatch } = this.state;\r\n    let listWillWatch = [...moviesWillWatch, movie];\r\n\r\n    this.setState({\r\n      moviesWillWatch: listWillWatch\r\n    })\r\n  }\r\n\r\n  removeMovieFromWillWatch = movie => {\r\n    const { moviesWillWatch } = this.state;\r\n    const updateMoviesWillWatch = moviesWillWatch.filter(item => item.id !== movie.id);\r\n\r\n    this.setState({\r\n      moviesWillWatch: updateMoviesWillWatch\r\n    })\r\n  }\r\n\r\n  updateSortBy = category => {\r\n    this.setState({\r\n      sort_by: category\r\n    })\r\n  }\r\n\r\n  moveToPrewPage = () => {\r\n    console.log('page: ', this.state.page);\r\n    if (this.state.page === 1) {\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        page: this.state.page - 1\r\n      })\r\n    }\r\n  }\r\n\r\n  moveToNextPage = () => {\r\n    console.log('page: ', this.state.page);\r\n\r\n    this.setState({\r\n      page: this.state.page + 1\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    const { movies, moviesWillWatch, sort_by, page, pages } = this.state;\r\n\r\n    return (\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <MovieTabs\r\n            sort_by={sort_by}\r\n            updateSortBy={this.updateSortBy}\r\n          />\r\n          <Col sm=\"9\">\r\n            <Row>\r\n              {movies.map(movie =>\r\n                <Col md=\"6\" className=\"mb-4\" key={movie.id}>\r\n                  <MovieItem\r\n                    movie={movie}\r\n                    removeMovie={this.removeMovie}\r\n                    addMovieToWillWatch={this.addMovieToWillWatch}\r\n                    removeMovieFromWillWatch={this.removeMovieFromWillWatch}\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Col>\r\n          <Col sm=\"3\">\r\n            <MoviesWillWatch moviesWillWatch={moviesWillWatch}/>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"ml-0\">\r\n          <ButtonGroup className=\"mb-4\">\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              onClick={this.moveToPrewPage}\r\n            >\r\n              Prew\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              outline\r\n              onClick={this.moveToNextPage}\r\n            >\r\n              Next\r\n            </Button>\r\n          </ButtonGroup>\r\n          <div className=\"ml-4\">Page Count: {page}/{pages}</div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}